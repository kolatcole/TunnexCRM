// <auto-generated />
using System;
using CRMSystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRMSystem.Presentation.Core.Migrations
{
    [DbContext(typeof(TContext))]
    [Migration("20200507154145_IST")]
    partial class IST
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CRMSystem.Domains.Cart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<string>("Code");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<int>("UserCreated");

                    b.Property<int>("UserModified");

                    b.HasKey("ID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("CRMSystem.Domains.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("Image");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.Property<int>("UserCreated");

                    b.Property<int>("UserModified");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CRMSystem.Domains.Invoice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("CartID");

                    b.Property<int?>("CashierID");

                    b.Property<int>("CustomerID");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<decimal>("Discount");

                    b.Property<string>("ExtData");

                    b.Property<DateTime>("InvoiceDate");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("IsPaid");

                    b.Property<decimal>("Tax");

                    b.Property<bool>("TaxInclusive");

                    b.Property<string>("TaxName");

                    b.Property<decimal>("TaxPercent");

                    b.Property<int>("UserCreated");

                    b.Property<int>("UserModified");

                    b.HasKey("ID");

                    b.HasIndex("CashierID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("CRMSystem.Domains.Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("CartID");

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.Property<int>("ProductID");

                    b.Property<decimal>("Quantity");

                    b.HasKey("ID");

                    b.HasIndex("CartID");

                    b.HasIndex("ProductID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("CRMSystem.Domains.Payment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("CustomerID");

                    b.Property<DateTime>("DatePaid");

                    b.Property<string>("InvoiceNo");

                    b.Property<string>("Method");

                    b.Property<string>("Reference");

                    b.Property<int?>("SaleID");

                    b.Property<int>("UserCreated");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("SaleID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("CRMSystem.Domains.Price", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CostPrice");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<decimal>("SalePrice");

                    b.Property<int>("UserCreated");

                    b.Property<int>("UserModified");

                    b.HasKey("ID");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("CRMSystem.Domains.Privilege", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name");

                    b.Property<bool>("Read");

                    b.Property<int>("RoleID");

                    b.Property<int>("UserCreated");

                    b.Property<int>("UserModified");

                    b.Property<bool>("Write");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Privileges");
                });

            modelBuilder.Entity("CRMSystem.Domains.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CostPrice");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("SalePrice");

                    b.Property<int>("UserCreated");

                    b.Property<int>("UserModified");

                    b.HasKey("ID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CRMSystem.Domains.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name");

                    b.Property<int>("UserCreated");

                    b.Property<int>("UserModified");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CRMSystem.Domains.Sale", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartID");

                    b.Property<int>("CustomerID");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<int>("UserCreated");

                    b.Property<int>("UserModified");

                    b.HasKey("ID");

                    b.HasIndex("CartID");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("CRMSystem.Domains.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Email");

                    b.Property<string>("Gender");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<string>("Post");

                    b.Property<int>("UserCreated");

                    b.Property<int>("UserModified");

                    b.Property<string>("Username");

                    b.HasKey("ID");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("CRMSystem.Domains.Invoice", b =>
                {
                    b.HasOne("CRMSystem.Domains.User", "Cashier")
                        .WithMany()
                        .HasForeignKey("CashierID");
                });

            modelBuilder.Entity("CRMSystem.Domains.Item", b =>
                {
                    b.HasOne("CRMSystem.Domains.Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRMSystem.Domains.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CRMSystem.Domains.Payment", b =>
                {
                    b.HasOne("CRMSystem.Domains.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRMSystem.Domains.Sale")
                        .WithMany("Payment")
                        .HasForeignKey("SaleID");
                });

            modelBuilder.Entity("CRMSystem.Domains.Privilege", b =>
                {
                    b.HasOne("CRMSystem.Domains.Role")
                        .WithMany("Privileges")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CRMSystem.Domains.Sale", b =>
                {
                    b.HasOne("CRMSystem.Domains.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
